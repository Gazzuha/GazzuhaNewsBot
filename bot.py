# üì¶ Telegram –±–æ—Ç "Game Events Tracker"
# –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Render.com, —á–∏—Ç–∞–µ—Ç Reddit –∏ —à–ª—ë—Ç –∏–≥—Ä–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏

import os
import logging
import threading
import time
from flask import Flask
import telegram
from telegram.ext import Updater, CommandHandler
import praw

# ----- –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ -----
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# ----- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è -----
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
REDDIT_CLIENT_ID = os.getenv("REDDIT_CLIENT_ID")
REDDIT_SECRET = os.getenv("REDDIT_SECRET")
REDDIT_USER_AGENT = "GameEventsBot/0.1"

# ----- Reddit API -----
reddit = praw.Reddit(
    client_id=REDDIT_CLIENT_ID,
    client_secret=REDDIT_SECRET,
    user_agent=REDDIT_USER_AGENT
)

# ----- Telegram –ö–æ–º–∞–Ω–¥—ã -----
def start(update, context):
    update.message.reply_text(
        "üëæ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–ª–µ–¥–∏—Ç –∑–∞ –∏–≥—Ä–æ–≤—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏: ARG, —á–µ–ª–ª–µ–Ω–¥–∂–∏, Steam —Ñ–µ—Å—Ç—ã –∏ —Ç.–¥.\n"
        "–ù–∞–ø–∏—à–∏ /events —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏."
    )

def events(update, context):
    subreddits = ["GameDetectives", "Games"]
    limit = 5
    messages = []
    for sub in subreddits:
        subreddit = reddit.subreddit(sub)
        messages.append(f"üî• –¢–æ–ø –∏–∑ r/{sub}:")
        for post in subreddit.hot(limit=limit):
            if not post.stickied:
                messages.append(f"‚Ä¢ [{post.title}]({post.url})")
    full_message = "\n".join(messages)
    update.message.reply_text(full_message, parse_mode=telegram.constants.ParseMode.MARKDOWN)

# ----- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ -----
def run_bot():
    updater = Updater(TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("events", events))

    logging.info("üöÄ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    updater.start_polling()
    updater.idle()

# ----- Flask-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è Render -----
app = Flask(__name__)

@app.route('/')
def index():
    return "Bot is running!"

def run_flask():
    port = int(os.environ.get("PORT", 10000))  # –ë–µ—Ä—ë–º –ø–æ—Ä—Ç –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ —Å—Ç–∞–≤–∏–º 10000
    logging.info(f"üåê Flask-–∑–∞–≥–ª—É—à–∫–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host="0.0.0.0", port=port)

# ----- –ó–∞–ø—É—Å–∫ –≤ –ø–æ—Ç–æ–∫–∞—Ö -----
if __name__ == '__main__':
    threading.Thread(target=run_bot).start()
    threading.Thread(target=run_flask).start()

    while True:
        time.sleep(10)  # –ß—Ç–æ–±—ã –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫ –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª—Å—è
